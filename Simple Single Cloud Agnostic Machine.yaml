formatVersion: 1
inputs:
  environment:
    type: string
    enum:
      - Sandbox
      - Dev
      - UAT
      - Regression
      - Prod
    default: Dev
    title: Environment
  image:
    type: string
    enum:
      - Windows-2012
      - CentOS
    default: CentOS
    title: Operating System
  size:
    type: string
    enum:
      - Micro
      - Small
      - Medium
    default: Micro
    title: Size
  sshKey:
    type: string
    maxLength: 500
    default: TypeSomethingHere
resources:
  Web:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 0
        - 0
    properties:
      image: '${input.image}'
      flavor: '${input.size}'
      cloudConfig:
        packages:
          - nginx
        runcmd:
          - 'echo ${resource.Web.networks[0].address}'
          - '/usr/bin/git clone https://github.com/codyde/frontend-demoapp /tmp/cas-demo-application'
          - /bin/rm -rf /etc/nginx/conf.d/*
          - /bin/rm -rf /usr/share/nginx/html/*
          - '/usr/bin/curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -'
          - /usr/bin/apt install nodejs -y
          - /usr/bin/npm install -g @angular/cli
          - cd /tmp/cas-demo-application && /usr/bin/npm install
          - /usr/bin/ng build --prod
          - /bin/cp -R /tmp/cas-demo-application/dist/cas-demo-app/* /usr/share/nginx/html/
          - /bin/sed -i "s@root /var/www/html@root /usr/share/nginx/html@" /etc/nginx/sites-available/default
          - /bin/cp /tmp/cas-demo-application/nginx/default.conf /etc/nginx/conf.d/default.conf
          - '/bin/sed -i "s@pyapi@${resource.Web.networks[0].address}@" /etc/nginx/conf.d/default.conf'
          - /bin/rm -rf /etc/nginx/sites-available/default
          - '/bin/sed -i "s@include /etc/nginx/sites-enabled/*@# include /etc/nginx/sites-enabled/*@" /etc/nginx/nginx.conf'
          - /bin/systemctl restart nginx
      constraints:
        - tag: '${"env:" + to_lower(input.environment)}'
      networks:
        - name: '${resource.Cloud_Network_1.name}'
          network: '${resource.Cloud_Network_1.id}'
  Cloud_Network_1:
    type: Cloud.Network
    metadata:
      layoutPosition:
        - 1
        - 0
    properties:
      name: Default
      networkType: existing
